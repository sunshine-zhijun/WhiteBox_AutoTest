2021-06-16 11:46:52.192 | DEBUG    | __main__:generate:29 - ==========safsaf
2021-06-16 11:46:52.193 | WARNING  | __main__:generate:30 - if you are using python 3.6, prefer f-strings of course!
2021-06-16 11:46:52.193 | FAIL     | __main__:generate:31 - ++++++++
2021-06-16 11:46:52.203 | WARNING  | utils.generate_caces:generate_case:47 - testcases/UnitTest/
2021-06-16 11:46:52.207 | WARNING  | utils.generate_caces:generate_case:52 - [{'Description': '出接口为egroup', 'Parameter': '{\n    "self_dict": {\n        "1": {\n            "configuration": {\n                "evif_name": "egroup1"\n            }\n        }\n    },\n    "policy_name": "policy1"\n}', 'FunctionDes': '测试转发策略分组', 'id_index': 1, 'CodePath': 'forward_policies/', 'ID': '1_1', 'FunctionName': 'get_egress_port_keys_of_policy_name_todict', 'ClassName': 'forward_policy', 'Expect': '{\n    "text": {\n        "C1": [\n            "policy1"\n        ],\n        "C2": [\n            "policy1"\n        ],\n        "C3": [\n            "policy1"\n        ]\n    }\n}', 'MockValue': '{\n    "egroup.get_egroup_interfaces": [\n        "C1"\n    ],\n    "elag.get_elag_interfaces": [\n        "C2"\n    ]\n}'}, {'Description': '出接口为elag', 'Parameter': '{\n    "self_dict": {\n        "1": {\n            "configuration": {\n                "evif_name": "elag1"\n            }\n        }\n    },\n    "policy_name": "policy1"\n}', 'FunctionDes': '', 'id_index': 1, 'CodePath': '', 'ID': '1_2', 'FunctionName': '', 'ClassName': '', 'Expect': '{\n    "text": {\n        "C1": [\n            "policy1"\n        ],\n        "C2": [\n            "policy1"\n        ],\n        "C3": [\n            "policy1"\n        ]\n    }\n}', 'MockValue': '{\n    "elag.get_elag_interfaces": [\n        "C2",\n        "C1",\n        "C3"\n    ]\n}'}, {'Description': '出接口为单接口', 'Parameter': '{\n    "self_dict": {\n        "1": {\n            "configuration": {\n                "evif_name": "C1"\n            }\n        }\n    },\n    "policy_name": "policy1"\n}', 'FunctionDes': '', 'id_index': 1, 'CodePath': '', 'ID': '1_3', 'FunctionName': '', 'ClassName': '', 'Expect': '{\n    "text": {\n        "C1": [\n            "policy1"\n        ]\n    }\n}', 'MockValue': ''}, {'Description': '无出接口', 'Parameter': '{\n    "self_dict": {\n        "1": {\n            "configuration": {\n                "evif_name1": "C1"\n            }\n        }\n    },\n    "policy_name": "policy1"\n}', 'FunctionDes': '', 'id_index': 1, 'CodePath': '', 'ID': '1_4', 'FunctionName': '', 'ClassName': '', 'Expect': '{\n    "text": {}\n}', 'MockValue': ''}]
2021-06-16 11:46:52.208 | INFO     | utils.generate_caces:generate_case:71 - testcases/UnitTest/PFX/forward_policies/test_get_egress_port_keys_of_policy_name_todict.py
2021-06-16 11:46:52.208 | WARNING  | utils.generate_caces:generate_case:52 - [{'Description': '可获取到elag子接口', 'Parameter': '{\n    "elag": "1"\n}', 'FunctionDes': '获取elag接口', 'id_index': 2, 'CodePath': 'forward_policies/', 'ID': '2_1', 'FunctionName': 'get_elag_interfaces', 'ClassName': 'elag', 'Expect': '{\n    "text": [\n        "C2",\n        "C1",\n        "C3"\n    ]\n}', 'MockValue': '{\n    "global_elags":{\n        "1": {\n            "configuration": {\n                "interfaces": [\n                    "C1",\n                    "C2",\n                    "C3"\n                ],\n                "comment": "aster@123"\n            }\n        }\n    }\n}'}]
2021-06-16 11:46:52.209 | INFO     | utils.generate_caces:generate_case:71 - testcases/UnitTest/PFX/forward_policies/test_get_elag_interfaces.py
2021-06-16 11:46:52.213 | WARNING  | utils.generate_caces:generate_case:47 - testcases/UnitTest/
2021-06-16 11:46:52.216 | WARNING  | utils.generate_caces:generate_case:52 - [{'Description': '支付成功测试', 'Parameter': '{\n    "user_id": "001",\n    "card": "621785360000099",\n    "amount": "1000"\n}', 'FunctionDes': '支付测试', 'id_index': 1, 'CodePath': 'pay_test/', 'ID': '1_1', 'FunctionName': 'pay', 'ClassName': 'PayApi', 'Expect': '{"text":"支付成功"}', 'MockValue': '{"self.auth":{"status_code":"200"}}'}, {'Description': '支付失败测试', 'Parameter': '{\n    "user_id": "001",\n    "card": "621785360000099",\n    "amount": "1001"\n}', 'FunctionDes': '', 'id_index': 1, 'CodePath': '', 'ID': '1_2', 'FunctionName': '', 'ClassName': '', 'Expect': '{"text":"支付失败"}', 'MockValue': '{"self.auth":{"status_code":"400"}}'}, {'Description': '服务器错误测试', 'Parameter': '{\n    "user_id": "001",\n    "card": "621785360000099",\n    "amount": "1002"\n}', 'FunctionDes': '', 'id_index': 1, 'CodePath': '', 'ID': '1_3', 'FunctionName': '', 'ClassName': '', 'Expect': '{"text":"服务器异常"}', 'MockValue': '{"self.auth":{"status_code":"500"}}'}]
2021-06-16 11:46:52.216 | INFO     | utils.generate_caces:generate_case:71 - testcases/UnitTest/pay_test/test_pay.py
